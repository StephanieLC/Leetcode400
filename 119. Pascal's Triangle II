class Solution(object):
    def getRow(self, rowIndex):
        """
        :type rowIndex: int
        :rtype: List[int]
        """
        if rowIndex==0:
            return [1]
        
        #print res
        temp=self.getRow(rowIndex-1)
        #print temp
        temp.append(0)
        temp.insert(0,0)
        a=temp[:len(temp)-1]
        b=temp[1:]
        #print a,b,temp
        res=[0]*(rowIndex+1)
        for i in range(rowIndex+1):
            res[i]=a[i]+b[i]
        return res
        
        
        
        
        
        #current row=(insert 0 at the beginning of last row)+(insert 0 to the end of last row), so use recursion
        #eg.        1
                   1 1
                  1 2 1
                 1 3 3 1     [0,1,3,3,1]+[1,3,3,1,0]=[1,4,6,4,1]
                1 4 6 4 1
                
